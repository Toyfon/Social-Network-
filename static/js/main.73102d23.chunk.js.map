{"version":3,"sources":["components/Header/Header.module.css","login/LoginForm.module.css","Redux/profilePage-reducer.tsx","assets/images/user.png","Redux/dialogsPage-reducer.tsx","components/Users/users.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","components/common/Paginator/Paginator.tsx","components/Users/users.tsx","Redux/users-reducer.ts","Redux/selectors/users-selectors.ts","components/Users/usersContainer.tsx","components/Header/Header.tsx","Redux/auth-reducer.ts","Redux/selectors/header-selectors.ts","components/Header/Header-container.tsx","login/LoginFormReactHookForm.tsx","Redux/app-reducer.ts","hoc/withSuspense.tsx","App.tsx","Redux/friendsBar-reducer.tsx","Redux/redux-store.tsx","index.tsx","api/api.ts","assets/Spin-2s-200px.svg","components/common/Preloader/Preloader.tsx","components/common/Paginator/Paginator.module.css"],"names":["module","exports","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","profile","status","addPostAC","newPostText","type","setStatus","getUserProfile","userId","dispatch","a","profileAPI","getProfile","response","data","getStatus","updateStatus","resultCode","profileReducer","state","action","newPost","id","message","likesCount","dialogs","name","messages","sendMessageCreator","newMessageBody","dialogsReducer","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","activeLink","settings","src","alt","News","Music","Settings","User","user","followingInProgress","follow","unfollow","avatar","photos","small","userPhoto","followed","disabled","some","onClick","usersSearchFormValidate","values","UsersSearchForm","React","memo","onFilterChanged","initialValues","term","friend","validate","onSubmit","setSubmitting","filter","isSubmitting","as","value","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","p","map","cn","selectedPage","pageNumber","Users","users","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","SET_FILTER","isFetching","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","setFilter","payload","followUnfollowFlow","ApiMethod","ActionCreator","usersReducer","count","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getFilter","UsersContainer","props","this","Preloader","Component","compose","connect","followAPI","page","usersAPI","items","totalCount","Header","isAuth","login","logout","header","login_block","email","errorMessage","setAuthUserDataAC","getAuthUserData","authAPI","me","authReducer","getAuthSelector","auth","getLoginSelector","getFetchingSelector","HeaderContainer","schema","yup","required","password","min","LoginFormReactHookForm","useSelector","useDispatch","setState","useForm","defaultValues","rememberMe","resolver","yupResolver","control","handleSubmit","errors","formState","useEffect","setTimeout","length","form","render","field","TextField","label","sx","width","marginBottom","error","helperText","onChange","FormControlLabel","Checkbox","checked","color","blueGrey","errMessage","Button","variant","initialized","appReducer","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","withRouter","app","friends","friendsBarReducer","rootReducer","combineReducers","profilePage","dialogsPage","friendsBar","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","basename","process","document","getElementById","instance","axios","create","withCredentials","baseURL","headers","get","post","delete","put","preloader"],"mappings":"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","file":"static/js/main.73102d23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2bexz\",\"login_block\":\"Header_login_block__1jcaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__35V_T\",\"errMessage\":\"LoginForm_errMessage__1GLZc\"};","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"social_network/profile/ADD-POST\";\r\nconst SET_USER_PROFILE = 'social_network/profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'social_network/profile/SET_STATUS'\r\n\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: boolean\r\n    fullName: string\r\n    contacts: {\r\n        github: string\r\n        vk: string\r\n        facebook: string\r\n        instagram: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type InitialProfilePageStateType = {\r\n    posts: Array<PostsType>\r\n    profile: null | ProfileType\r\n    status: string\r\n}\r\n\r\n\r\nexport let initialState: InitialProfilePageStateType = {\r\n    posts: [],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialProfilePageStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts]\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\nexport type ActionsType =\r\n    ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setStatus>\r\n\r\n\r\nexport const addPostAC = (newPostText: string) => ({type: ADD_POST, newPostText} as const)\r\nexport const setUserProfile = (profile: null | ProfileType) => ({type: SET_USER_PROFILE, profile} as const)\r\nexport const setStatus = (status: string) => ({type: SET_STATUS, status} as const)\r\n\r\n//ThunkCreator\r\nexport const getUserProfile = (userId: number) => async (dispatch: Dispatch) => {\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: Dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/user.9dc92b0a.png\";","\r\nconst SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\n\r\nexport type InitialDialogsPageStateType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessagesType>\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type ActionsType =  ReturnType<typeof sendMessageCreator>\r\n\r\n\r\nlet initialState: InitialDialogsPageStateType = {\r\n    dialogs: [\r\n        {id: 1, name: 'Vova'},\r\n        {id: 2, name: 'Tolya'},\r\n        {id: 3, name: 'Petya'},\r\n        {id: 4, name: 'Kostya'},\r\n        {id: 5, name: 'Valya'},\r\n        {id: 6, name: 'Sveta'},\r\n        {id: 7, name: 'Tanya'}\r\n\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'HI'},\r\n        {id: 2, message: 'Yo'},\r\n        {id: 3, message: 'Ho.w are you'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n        {id: 6, message: 'Yo'},\r\n        {id: 7, message: 'Здарова'},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialDialogsPageStateType => {\r\n    switch (action.type) {\r\n        case \"SEND_MESSAGE\":\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 8, message: body}]\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\nexport let sendMessageCreator = (newMessageBody:string) => ({type: SEND_MESSAGE,newMessageBody} as const)\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"users_avatar__RyyWZ\",\"selectedStyle\":\"users_selectedStyle__1z71x\",\"pagesNumber\":\"users_pagesNumber__3KvM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2ev7v\",\"item\":\"Navbar_item__If-GM\",\"activeLink\":\"Navbar_activeLink__3dvxV\",\"settings\":\"Navbar_settings__YS73a\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/friends\" activeClassName={s.activeLink}>Friends</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.settings}>\r\n                <img src=\"https://img.icons8.com/offices/30/000000/settings.png\" alt=\"\"/>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar","export const News = () => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n\r\n  )\r\n}","export const Music = () => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n\r\n  )\r\n}","export const Settings = () => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}","import {UserType} from \"../../Redux/users-reducer\";\r\nimport React from \"react\";\r\nimport s from './users.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport userPhoto from './../../assets/images/user.png'\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unfollow:(userId: number) => void\r\n}\r\n\r\nexport const User:React.FC<UserPropsType> = ({user,followingInProgress,follow,unfollow, ...props}) => {\r\n    return <div key={user.id}>\r\n        <span>\r\n                <div className={s.avatar}>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                          <img src={user.photos.small !== null ? user.photos.small : userPhoto} alt=\"\"/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            unfollow(user.id)\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            follow(user.id)\r\n                        }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n        <span>\r\n                    <span>\r\n                        <div>{user.name}</div><div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                    <div>{'u.location.country'}</div>\r\n                        <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n    </div>\r\n}","import {Field, Form, Formik, FormikHelpers} from \"formik\";\r\nimport React, {FC} from \"react\";\r\nimport {FilterType} from \"../../Redux/users-reducer\";\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\ntype FormType = {\r\n    term: string,\r\n    friend: \"null\" | \"false\" | \"true\"\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\n\r\nexport const UsersSearchForm: FC<PropsType> = React.memo(({onFilterChanged, ...props}) => {\r\n    const initialValues: FormType = {term: '', friend: 'null'}\r\n    const submit = (values: FormType, {setSubmitting}: FormikHelpers<FormType>) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === \"null\" ? null : values.friend === \"true\"\r\n        }\r\n        onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div>\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validate={usersSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\"/>\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Search\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n})\r\n","import React, {FC, useState} from \"react\";\r\nimport s from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\n\r\ntype PaginatorType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n}\r\n\r\nexport const Paginator: FC<PaginatorType> = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);//Math.ceil округляет до целого числа в большую сторону\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 && <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>PREV</button>}\r\n\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn ({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber)}\r\n                             key={p}\r\n                             onClick={() => {\r\n                                 onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>NEXT</button>}\r\n    </div>\r\n}","import React, {FC} from \"react\";\r\nimport {FilterType, UserType} from \"../../Redux/users-reducer\";\r\nimport {User} from \"./User\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\n\r\n\r\ntype UsersType = {\r\n    users: UserType[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: number[]\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nconst Users: FC<UsersType> = ({\r\n                                  users, follow, unfollow,\r\n                                  totalItemsCount,\r\n                                  pageSize, currentPage,\r\n                                  onPageChanged, followingInProgress, onFilterChanged, ...props\r\n                              }) => {\r\n\r\n    let portionSize = 10\r\n\r\n    return <div>\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n        <div>\r\n            <Paginator pageSize={pageSize}\r\n                       currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalItemsCount}\r\n                       portionSize={portionSize}/>\r\n        </div>\r\n\r\n        {\r\n            users.map(u => <User user={u}\r\n                                 followingInProgress={followingInProgress}\r\n                                 key={u.id}\r\n                                 follow={follow}\r\n                                 unfollow={unfollow}\r\n                />\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users","import {Dispatch} from \"redux\";\r\nimport {followAPI, usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"UserPage/FOLLOW\";\r\nconst UNFOLLOW = 'UserPage/UNFOLLOW'\r\nconst SET_USERS = 'UserPage/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'UserPage/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USER_COUNT = 'UserPage/SET_TOTAL_USER_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'UserPage/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'UserPage/TOGGLE_IS_FOLLOWING_PROGRESS'\r\nconst SET_FILTER = 'UserPage/SET_FILTER'\r\n\r\n\r\nexport type UserType = any\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalItemsCount: 100,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>,\r\n    filter: {\r\n        term: \"\",\r\n        friend: null as null | boolean\r\n    }\r\n};\r\n\r\nexport  type InitialUsersPageStateType = typeof initialState\r\nexport  type FilterType = typeof initialState.filter\r\n\r\nconst usersReducer = (state = initialState, action: ActionsType): InitialUsersPageStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USER_COUNT: {\r\n            return {...state, totalItemsCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        case SET_FILTER: {\r\n            return {\r\n                ...state, filter: action.payload.filter\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport type ActionsType =\r\n    ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unfollowSuccess> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof toggleIsFetching> |\r\n    ReturnType<typeof toggleFollowingProgress> |\r\n    ReturnType<typeof setFilter>\r\n\r\n//Action Creators (dispatching actions)\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const)\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const)\r\nexport const setUsers = (users: []) => ({type: SET_USERS, users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: SET_TOTAL_USER_COUNT, count: totalCount} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => (\r\n    {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    } as const)\r\nexport const setFilter = (filter: FilterType) => ({type: SET_FILTER, payload: {filter}} as const)\r\n\r\n\r\n//ThunkCreator (функция, которая принимает параметры и возвращает санку)\r\nexport const requestUsers = (page: number, pageSize: number, filter: FilterType) => {\r\n    return async (dispatch: Dispatch) => {\r\n        dispatch(setCurrentPage(page))\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setFilter(filter))\r\n        let data = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number, ApiMethod: any, ActionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let data = await ApiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(ActionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const unfollow = (userId: number) => async (dispatch: Dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, followAPI.unfollow, unfollowSuccess)\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, followAPI.follow, followSuccess)\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n\r\n\r\n","import {RootReducerType} from \"../redux-store\";\r\nimport {FilterType, UserType} from \"../users-reducer\";\r\n\r\n\r\nexport const  getUsers = (state:RootReducerType):UserType[] => state.usersPage.users\r\nexport const  getPageSize = (state:RootReducerType):number => state.usersPage.pageSize\r\nexport const  getTotalUsersCount = (state:RootReducerType):number => state.usersPage.totalItemsCount\r\nexport const  getCurrentPage = (state:RootReducerType):number => state.usersPage.currentPage\r\nexport const  getIsFetching = (state:RootReducerType):boolean => state.usersPage.isFetching\r\nexport const  getFollowingInProgress = (state:RootReducerType):number[] => state.usersPage.followingInProgress\r\nexport const  getFilter = (state:RootReducerType):FilterType => state.usersPage.filter\r\n","import {connect} from \"react-redux\";\r\nimport Users from \"./users\";\r\nimport {RootReducerType} from \"../../Redux/redux-store\";\r\nimport {\r\n    FilterType,\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow,\r\n    UserType\r\n} from \"../../Redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFilter, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/selectors/users-selectors\";\r\n\r\n\r\ntype UsersType = {\r\n    users: UserType[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    setCurrentPage: (pageNumber: number) => void\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n    getUsers: (currentPage: number, pageSize: number, filter: FilterType) => void\r\n    filter: FilterType\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize, filter} = this.props\r\n        this.props.getUsers(currentPage, pageSize, filter)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize, filter} = this.props\r\n        this.props.getUsers(pageNumber, pageSize, filter)\r\n    }\r\n    onFilterChanged = (filter: FilterType) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(1, pageSize, filter)\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalItemsCount={this.props.totalItemsCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   onFilterChanged={this.onFilterChanged}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootReducerType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        filter: getFilter(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers\r\n    }),\r\n   // withAuthRedirect\r\n)(UsersContainer)\r\n\r\n","import s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AuthType} from \"./Header-container\";\r\nimport {FC} from \"react\";\r\n\r\n\r\nexport type HeaderType = AuthType\r\n\r\nconst Header:FC<HeaderType> = ({isAuth,login,logout,...props}) => {\r\n    return <header className={s.header}>\r\n\r\n        <div className={s.login_block}>\r\n            {isAuth\r\n                ? <div>{login} - <button onClick={logout}>Log out</button></div>\r\n                :\r\n                <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {Dispatch} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {RootReducerType} from \"./redux-store\";\r\n\r\nexport type InitialStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    isFetching: boolean\r\n    errorMessage: string\r\n}\r\n\r\n\r\nlet initialState: InitialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    errorMessage: \"\"\r\n};\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_USER_DATA\":\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case \"TOGGLE-IS-FETCHING\": {\r\n            return {...state, isFetching: action.payload.isFetching}\r\n        }\r\n        case \"SHOW_DATA_MESSAGE\": {\r\n            return {...state, ...action.payload}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\nexport type ActionsType = ReturnType<typeof setAuthUserDataAC> | ReturnType<typeof toggleIsFetching> |\r\n                          ReturnType<typeof showDataMessage>\r\n\r\n\r\nexport const setAuthUserDataAC = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: \"SET_USER_DATA\",\r\n    payload: {id, email, login, isAuth}\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: \"TOGGLE-IS-FETCHING\", payload:{isFetching}} as const)\r\nexport const showDataMessage = (errorMessage: string ) => ({type: \"SHOW_DATA_MESSAGE\", payload:{errorMessage}} as const)\r\n\r\n\r\n//ThunkCreator\r\nexport const getAuthUserData = () => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(toggleIsFetching(true))\r\n     return authAPI.me().then((response) => {\r\n        dispatch(toggleIsFetching(false))\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data\r\n            dispatch(setAuthUserDataAC(id, email, login, true))\r\n        }\r\n    })\r\n}\r\n\r\nexport type ThunkType = ThunkAction<\r\n    void, // Return type of the thunk function\r\n    RootReducerType, // state type used by getState\r\n    unknown, // any \"extra argument\" injected into the thunk\r\n    ActionsType // known types of actions that can be dispatched\r\n    >\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean):ThunkType => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n        dispatch(toggleIsFetching(false))\r\n        if (response.data.resultCode === 0) {\r\n            await dispatch(getAuthUserData())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\"\r\n            dispatch(showDataMessage(message))\r\n        }\r\n}\r\n\r\n\r\nexport const logout = ():ThunkType => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let response = await authAPI.logout()\r\n        dispatch(toggleIsFetching(false))\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserDataAC(null,null,null,false))\r\n        }\r\n}\r\n\r\n\r\nexport default authReducer;\r\n\r\n\r\n","import {RootReducerType} from \"../redux-store\";\r\n\r\nexport const  getAuthSelector = (state:RootReducerType):boolean => state.auth.isAuth\r\nexport const  getLoginSelector = (state:RootReducerType):string | null => state.auth.login\r\nexport const  getFetchingSelector = (state:RootReducerType):boolean => state.auth.isFetching","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\nimport {RootReducerType} from \"../../Redux/redux-store\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {Result} from \"../../api/api\";\r\nimport {getAuthSelector, getFetchingSelector, getLoginSelector} from \"../../Redux/selectors/header-selectors\";\r\n\r\n\r\nexport type AuthType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    isFetching: boolean\r\n    logout: () => void\r\n}\r\n\r\ntype AuthDataType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n}\r\n\r\nexport type AuthMeResponseType = Result<AuthDataType>\r\n\r\nclass HeaderContainer extends React.Component<AuthType> {\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Header {...this.props} logout={this.props.logout}/>\r\n        </>\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootReducerType) => ({\r\n    isAuth: getAuthSelector(state),\r\n    login: getLoginSelector(state),\r\n    isFetching: getFetchingSelector(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)\r\n\r\n\r\n","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {Button, Checkbox, FormControlLabel, TextField} from \"@mui/material\";\r\nimport {login} from \"../Redux/auth-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootReducerType} from \"../Redux/redux-store\";\r\nimport s from \"./LoginForm.module.css\";\r\nimport * as yup from \"yup\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport {blueGrey} from \"@mui/material/colors\";\r\n\r\n\r\ntype FormType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype PropsType = {}\r\nconst schema = yup.object({\r\n    email: yup.string().required('Email is required').email('Enter a valid email'),\r\n    password: yup.string().required('Password is required').min(8, 'Password should be  min 8 characters length'),\r\n});\r\n\r\nexport const LoginFormReactHookForm: FC<PropsType> = React.memo(() => {\r\n\r\n    const errorMessage = useSelector<RootReducerType, string>(state => state.auth.errorMessage)\r\n    const isAuth = useSelector<RootReducerType, boolean>(state => state.auth.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const [state, setState] = useState<string>('')\r\n\r\n\r\n    const {control, handleSubmit, formState: {errors},} = useForm<FormType>({\r\n        defaultValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        resolver: yupResolver(schema)\r\n    })\r\n    const onSubmit = (values: FormType) => {\r\n        const {email, password, rememberMe} = values\r\n        dispatch(login(email, password, rememberMe))\r\n    }\r\n    //\r\n    useEffect(() => {\r\n        setState(errorMessage)\r\n        setTimeout(() => {\r\n            setState('')\r\n        }, 3000)\r\n    }, [errorMessage])\r\n\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"email\"\r\n                    render={({field}) => (\r\n                        <TextField {...field}\r\n                                   label=\"Email\"\r\n                                   sx={{width: '300px', marginBottom: '10px',}}\r\n                                   error={!!errors?.email}\r\n                                   helperText={errors?.email ? errors.email.message : null}\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    control={control}\r\n                    name=\"password\"\r\n                    render={({field}) => (\r\n                        <TextField {...field}\r\n                                   type={'password'}\r\n                                   label=\"Password\"\r\n                                   sx={{width: '300px', marginBottom: '10px'}}\r\n                                   error={!!errors?.password}\r\n                                   helperText={errors?.password ? errors.password.message : null}\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    control={control}\r\n                    name=\"rememberMe\"\r\n                    render={({field: {value, onChange}}) => (\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox checked={value} onChange={onChange}\r\n                                          sx={{\r\n                                              color: blueGrey['A400'],\r\n                                              '&.Mui-checked': {\r\n                                                  color: blueGrey[800],\r\n                                              },\r\n                                          }}\r\n                                />}\r\n                            label=\"Remember me\"\r\n                        />\r\n                    )}\r\n                />\r\n                <div>\r\n                    <div className={s.errMessage}>{state}</div>\r\n                </div>\r\n\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n})","import {Dispatch} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootReducerType} from \"./redux-store\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_INITIALIZED\":\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\nexport type ActionType = ReturnType<typeof initializedSuccess>\r\n\r\nexport const initializedSuccess = () => ({type: \"SET_INITIALIZED\",} as const)\r\n\r\n\r\nexport type ThunkType = ThunkAction<void, // Return type of the thunk function\r\n    RootReducerType, // state type used by getState\r\n    unknown, // any \"extra argument\" injected into the thunk\r\n    ActionType // known types of actions that can be dispatched\r\n    >\r\n\r\n\r\n//ThunkCreator\r\nexport const initializeApp = (): ThunkType =>  (dispatch: Dispatch) => {\r\n    //@ts-ignore\r\n    let promise = dispatch(getAuthUserData())\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer;\r\n\r\n\r\n","import React, {Suspense} from \"react\";\r\nimport {Preloader} from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport function withSuspense<T> (Component: React.ComponentType<T>)  {\r\n    return (props: any) => {\r\n        //Suspense should be used conjunction with React.lazy\r\n       return  <Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}\r\n\r\n","import './App.css';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {News} from \"./components/News/News\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport React from \"react\";\r\nimport UsersContainer from \"./components/Users/usersContainer\";\r\nimport HeaderContainer from \"./components/Header/Header-container\";\r\nimport {LoginFormReactHookForm} from \"./login/LoginFormReactHookForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/app-reducer\";\r\nimport {RootReducerType} from \"./Redux/redux-store\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer')) // lazy loading\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer')) // lazy loading\r\n\r\n\r\ntype AppType = {\r\n    initializeApp: () => void\r\n    initialized: boolean\r\n}\r\n\r\nclass App extends React.Component<AppType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                        // Lazy loading Components\r\n                           render={withSuspense(DialogsContainer)}/>\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer)}/>\r\n                    <Route path='/news' render={() => <News/>}/>\r\n                    <Route path='/music' render={() => <Music/>}/>\r\n                    <Route path='/settings' render={() => <Settings/>}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    <Route path='/login' render={() => <LoginFormReactHookForm/>}/>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: RootReducerType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))\r\n(App)\r\n\r\n","\r\n\r\nexport type FriendType = {\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type FriendsBarType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\n\r\n\r\n\r\nlet initialState:FriendsBarType = {\r\n        friends: [\r\n            {\r\n                id: 1,\r\n                name: 'Tolya',\r\n                avatar: 'https://source.unsplash.com/weekly?user'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Yura',\r\n                avatar: 'https://source.unsplash.com/user/erondu/daily'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Leha',\r\n                avatar: 'https://source.unsplash.com/weekly?man'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Ruslan',\r\n                avatar: 'https://source.unsplash.com/weekly?man'\r\n            },\r\n            {\r\n                id: 5,\r\n                name: 'Kostya',\r\n                avatar: 'https://source.unsplash.com/weekly?man'\r\n            },\r\n        ]\r\n    };\r\n\r\nconst friendsBarReducer =(state = initialState ,action:any) => {\r\n\r\n\r\n    return state\r\n}\r\n\r\n\r\n\r\nexport default friendsBarReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profilePage-reducer\";\r\nimport dialogsReducer from \"./dialogsPage-reducer\";\r\nimport friendsBarReducer from \"./friendsBar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport  thunk from 'redux-thunk'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nexport type RootReducerType = ReturnType <typeof rootReducer>\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogsPage:dialogsReducer,\r\n    friendsBar:friendsBarReducer,\r\n    usersPage:usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)\r\n));\r\n\r\n\r\n\r\nexport default store","import React from 'react';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport store from \"./Redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>,\r\n        document.getElementById('root'));\r\n\r\n\r\nreportWebVitals();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {UserType} from \"../Redux/users-reducer\";\r\nimport {ProfileType} from \"../Redux/profilePage-reducer\";\r\nimport {AuthMeResponseType} from \"../components/Header/Header-container\";\r\nimport {statusResponseType} from \"../components/Profile/ProfileInfo/ProfileStatus\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"4c618d05-4087-4c56-9fa2-e412fa4c037d\"\r\n    }\r\n})\r\n\r\n\r\nexport type Result<T> = {\r\n    resultCode: 0 | 1\r\n    data: T\r\n}\r\n\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10, term = '', friend: null | boolean = null) {\r\n        return instance.get<UserType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '': `&friend=${friend}`)) // get запрос (типизируем только AxiosResponse)\r\n            .then(response => response.data)\r\n    }\r\n}\r\nexport const followAPI = {\r\n    follow(userId: number) {\r\n        return instance.post<UserType,AxiosResponse<UserType>>(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`) // delete запрос (типизируем только AxiosResponse)\r\n            .then(response => response.data)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId);\r\n    },\r\n    getStatus(userId:number) {\r\n        return instance.get<string>(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status:string) {\r\n        return instance.put<statusResponseType>(`profile/status`, {\r\n            status:status\r\n        });\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<AuthMeResponseType>(`auth/me`)\r\n    },\r\n    login(email:string, password:string, rememberMe:boolean = false) {\r\n        return instance.post(`auth/login`,{email,password,rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Spin-2s-200px.8e940727.svg\";","import preloader from \"../../../assets/Spin-2s-200px.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} alt=\"Preloader\"/>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3pLU1\",\"pageNumber\":\"Paginator_pageNumber__3atX7\",\"selectedPage\":\"Paginator_selectedPage__FST6t\"};"],"sourceRoot":""}